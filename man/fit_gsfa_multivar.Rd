% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/GSFA.R
\name{fit_gsfa_multivar}
\alias{fit_gsfa_multivar}
\title{Bayesian Guided Sparse Factor Analysis on Perturbed Gene Expression Matrix}
\usage{
fit_gsfa_multivar(
  Y,
  G,
  K,
  fit0,
  prior_type = c("mixture_normal", "spike_slab"),
  init.method = c("svd", "random", "given"),
  prior_w_s = 50,
  prior_w_r = 0.2,
  prior_beta_s = 20,
  prior_beta_r = 0.2,
  niter = 500,
  average_niter = 200,
  lfsr_niter = average_niter,
  verbose = TRUE,
  return_samples = TRUE
)
}
\arguments{
\item{Y}{A sample by gene numeric matrix that stores normalized gene expression values;
\code{is.matrix(Y)} should be \code{TRUE};}

\item{G}{Either a numeric vector or a sample by perturbation numeric matrix
that stores sample-level perturbation information;
length or nrow of \code{G} should be the same as \code{nrow(Y)};}

\item{K}{Number of factors to use in the model; only one of \code{K}
and \code{fit0} is needed;}

\item{fit0}{A list of class 'gsfa_fit' that is obtained from a previous \code{fit_gsfa_multivar}
run, so that more iterations of Gibbs sampling can be carried out on top of it;
only one of \code{K} and \code{fit0} is needed;}

\item{prior_type}{Type of sparse prior used on gene weights, can be "mixture_normal"
or "spike_slab", "mixture_normal" sometimes works better in inducing sparsity;}

\item{init.method}{Method to initialize the factors, can be one of
"svd" (truncated SVD on \code{Y}) or "random";}

\item{niter}{Total number of Gibbs sampling iterations;}

\item{average_niter}{Number of last iterations to obtain the posterior samples of parameters;}

\item{lfsr_niter}{Number of last iterations of posterior samples to compute LFSR from;}

\item{return_samples}{Boolean indicator of whether all posterior samples throughout
Gibbs sampling should be returned;}
}
\value{
A list of class 'gsfa_fit' which stores the Gibbs sampling updates
and posterior mean estimates, and the prior parameters used during the inference.
}
\description{
Performs GSFA on given gene expression matrix and matching perturbation
information using Gibbs sampling.
}
\details{
Uses functions implemented in Rcpp from \code{GSFA_gibbs_inference.cpp}.
}
\examples{
\dontrun{
fit0 <- fit_gsfa_multivar(Y, G, 10, init.method = "svd", niter = 500, average_niter = 200)
fit1 <- fit_gsfa_multivar(Y, G, fit0 = fit0, niter = 500, average_niter = 200)
}
}
